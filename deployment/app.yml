apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: openprofile-api
  name: openprofile-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      service: openprofile-api
  template:
    metadata:
      labels:
        service: openprofile-api
    spec:
      containers:
        - image: maksim1111/openprofile-api:latest
          name: openprofile-api
          imagePullPolicy: IfNotPresent
          command: [ "/app/main" ]
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
          volumeMounts:
            - mountPath: /app/config.yml
              name: openprofile-api-config
              subPath: config.yml
          env:
            - name: CONFIG_FILE_PATH
              value: /app/config.yml
      volumes:
        - name: openprofile-api-config
          secret:
            secretName: openprofile-api-secrets
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: openprofile-api
  name: openprofile-api
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    service: openprofile-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: openprofile-api
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: openprofile-api.mxksim.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: openprofile-api
                port:
                  number: 8080